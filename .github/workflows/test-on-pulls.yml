name: Run tests on pull requests
run-name: Running tests
on:
  pull_request:

env:
  DEEPL_KEY: ${{ secrets.DEEPL_KEY }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DISCORD_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
  DISCORD_DEV_SERVER_ID: ${{ secrets.DISCORD_DEV_SERVER_ID }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_PUBLIC_KEY: ${{ secrets.DISCORD_PUBLIC_KEY }}
  SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
  SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET }}
  SUPABASE_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
  SUPABASE_POSTGRES_URL: ${{ secrets.SUPABASE_POSTGRES_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  TEST_VAR: ${{ secrets.TEST_VAR }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Generate Prisma Client
        run: yarn pgenerate

      - name: Run tests
        run: yarn test

      - name: Run prettier
        run: yarn prettify

      - name: Build Dockerfile
        run: docker build -t discord-bot .

      # - name: Build Docker Compose
      #   run: docker-compose build

      # - name: Start Docker Compose
      #   run: docker-compose up -d

      # - name: Stop Docker Compose
      #   run: docker-compose down
